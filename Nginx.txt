Nginx基础：Nginx是一个高性能的web服务器和反向代理服务器，以及email服务器

由c语言实现的开源web服务器 Nginx，2004发布由俄罗斯两个程序员2月左右
优势：相同的配置下Nginx比Apache性能好，并发数高

官方网站 Nginx.org 

sudo vi /etc/yum.repos.d/nginx.repo

[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/OS/OSRELEASE/$basearch/
gpgcheck=0
enabled=1

Replace “OS” with “rhel” or “centos”
“OSRELEASE” with “6”

查看当前系统的可用yum源
sudo yum repolist

sudo yum install nginx

ps aux | grep nginx

sudo killall httpd

sudo nginx

nginx -h
Options:
  -?,-h         : this help
  -v     查看版本       : show version and exit
  -V            : show version and configure options then exit
  -t       测试配置文件语法     : test configuration and exit
  -T            : test configuration, dump it and exit
  -q            : suppress non-error messages during configuration testing
  -s signal  给主进程发送信号   : send signal to a master process: stop, quit, reopen, reload
  -p prefix     : set prefix path (default: /etc/nginx/)
  -c filename   : set configuration file (default: /etc/nginx/nginx.conf)
  -g directives : set global directives out of configuration file

Nginx主配置文件
1路径  whereis nginx
2语法组成和指令的结构
包含四个简单指令
指令名 指令值1 指令值2
包含两个块指令
events{指令名 指令值1 指令值2}
httpd{指令名 指令值1 指令值2}
3分析每个基本命令（官方文档）
user nginx
设置工作进程的所属用户和群组，如果group没有写，group等于user的值
worker processes
sudo vi /etc/nginx/nginx.conf 
sudo nginx -s reload
ps aux | grep nginx

验证404错误
1.修改nginx配置文件
sudo vi /etc/nginx/conf.d/default.conf   x
2.去掉#
#error_page 404
3.重新加载配置文件
sudo nginx -s reload
4在根目录下拷贝50x.html，并重命名为404.html
root   /usr/share/nginx/html;
$ cd  /var/share/nginx/html
$ sudo  cp  50x.html  404.html

ps -ef | grep nginx

5.验证
浏览器输入错误地址，返回404.html
localhost/test.png


kill -9 工作进程id 该进程被kill掉，自动马上创建新工作进程
kill -9 主进程 主进程被kill掉，web什么请求也处理不了
kill 主进程id 结果所有nginx、进程全部被kill

pid指令  设置主进程的id文件路径
error log指令


回顾：
今天内容
Nginx如何支持php 
apache 支持php动态解析 httpd.conf文件添加三行指令
1.1 设计模式：每个apache进程httpd都会包含php模块，无论是否需要解析php代码，httpd+php模块都是一个整体；
会对服务器的资源造成浪费（绝大部分提供静态页面）
2引言
CGI：Common GatewayInterface 通用网关接口
描述：定义一个接口标准，定义web服务器和外部应用程序之间，如何传参数，如何返回数据，什么样格式的数据等等标。

实现：使用任何的语言实现上述的标准c/c++,PHP,Python;
使用不同的语言实现上述标准，就是该语言的CGI程序。
FastCGI：CGI的升级版本，引入FastCGI管理程序

location ~ \.php$ {
        root        /usr/share/nginx/html;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME /usr/share/nginx/html$fastcgi_script_name;
        include       /etc/nginx/fastcgi_params;
    }
